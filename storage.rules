rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // ✅ Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return request.auth != null && 
             firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isValidImage() {
      return request.resource.size < 5 * 1024 * 1024 && // 5MB limit
             request.resource.contentType.matches('image/.*');
    }
    
    // ✅ Profile photos - users can only upload their own photos
    match /profile-photos/{sessionId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
                     isOwner(sessionId) && 
                     isValidImage();
    }
    
    // ✅ Event QR codes - read access for all, write for admins only
    match /event-qr-codes/{eventId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isAdmin();
    }
    
    // ✅ Deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
